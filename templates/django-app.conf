# /etc/nginx/conf.d/django-app.conf

# Upstream for Django app
upstream django_app {
    server unix:/run/gunicorn/django.sock fail_timeout=0;
    keepalive 2;
}

# HTTP server: redirect to HTTPS
server {
    listen 80;
    server_name ${NGINX_SERVER_NAME};

    # For certbot challenges
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl;
    server_name ${NGINX_SERVER_NAME};
    http2 on;

    # SSL Configuration
    ssl_certificate /etc/nginx/certs/${NGINX_SERVER_NAME}.crt;
    ssl_certificate_key /etc/nginx/certs/${NGINX_SERVER_NAME}.key;

    # Modern SSL settings
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;

    # HSTS
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Basic security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Connection and request limits
    limit_conn conn_limit 10;
    limit_req zone=req_limit burst=20 nodelay;

    # Static files
    location /static/ {
        alias /app/staticfiles/;
        expires 7d;
        add_header Cache-Control "public, no-transform";
        add_header Vary Accept-Encoding;
        access_log off;
        try_files $uri $uri/ @django;
    }

    # Media files
    location /media/ {
        alias /app/media/;
        expires 1d;
        add_header Cache-Control "public";
        access_log off;
        try_files $uri $uri/ @django;
    }

    # Favicon
    location = /favicon.ico {
        alias /app/staticfiles/favicon.ico;
        expires 7d;
        access_log off;
        log_not_found off;
    }

    # Robots.txt
    location = /robots.txt {
        alias /app/staticfiles/robots.txt;
        expires 1d;
        access_log off;
        log_not_found off;
    }

    # Health check endpoint
    location = /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Django application
    location / {
        try_files $uri @django;
    }

    location @django {
        proxy_pass http://django_app;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        # Optimized for local backend
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 4 4k;
        proxy_busy_buffers_size 8k;

        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Block access to sensitive files
    location ~ /\.(ht|env|git) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block common exploit attempts
    location ~ /(wp-admin|wp-login|phpmyadmin) {
        deny all;
        access_log off;
        return 444;
    }
}